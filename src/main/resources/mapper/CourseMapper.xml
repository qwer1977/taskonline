<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taskonline.sys.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.taskonline.sys.entity.Course">
    <id column="cid" jdbcType="BIGINT" property="cid" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="tid" jdbcType="BIGINT" property="tid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.taskonline.sys.entity.Course">
    <result column="describe" jdbcType="LONGVARCHAR" property="describe" />
  </resultMap>
  <sql id="Base_Column_List">
    cid, cname, tid, create_time, end_time
  </sql>
  <sql id="Blob_Column_List">
    `describe`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    where cid = #{cid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from course
    where cid = #{cid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.taskonline.sys.entity.Course">
    insert into course (cid, cname, tid, 
      create_time, end_time, `describe`
      )
    values (#{cid,jdbcType=BIGINT}, #{cname,jdbcType=VARCHAR}, #{tid,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{describe,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.taskonline.sys.entity.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="describe != null">
        `describe`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=BIGINT},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.taskonline.sys.entity.Course">
    update course
    <set>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="tid != null">
        tid = #{tid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="describe != null">
        `describe` = #{describe,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.taskonline.sys.entity.Course">
    update course
    set cname = #{cname,jdbcType=VARCHAR},
      tid = #{tid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      `describe` = #{describe,jdbcType=LONGVARCHAR}
    where cid = #{cid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taskonline.sys.entity.Course">
    update course
    set cname = #{cname,jdbcType=VARCHAR},
      tid = #{tid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where cid = #{cid,jdbcType=BIGINT}
  </update>
</mapper>